# http://nbviewer.jupyter.org/github/QuantEcon/QuantEcon.applications/blob/master/pandas/pandas_solutions.ipynb
# http://investexcel.net/all-yahoo-finance-stock-tickers/
# to do: use interactive viz or table, seaborn, plotly
# latest stock list for SG: githhub SGX.csv

%matplotlib inline
import numpy as np
import pandas as pd
import seaborn
import datetime as dt
from pandas_datareader import data,wb
import pandas_datareader.data as web
import matplotlib.pyplot as plt
from pandas import ExcelWriter

import csv

today = dt.datetime.now().strftime ("%m%d%Y")

# format of ticker_list = {'INTC': 'Intel',
#               'MSFT': 'Microsoft',
#               'SNE': 'Sony',
#               'PTR': 'PetroChina'}

ticker_list = ['OV8.SI','S58.SI', 'AVV.SI', 'Y92.SI', '^STI', '^IXIC', '^GSPC']

# datetime format is year, month, day
start = dt.datetime(2016, 1, 1)
end = dt.datetime.today()

stockprice = web.get_data_yahoo(ticker_list, start, end)['Adj Close']
stockprice[ticker_list].plot(grid = True, figsize=(16, 10))
plt.show
corr_df = stockprice.corr(method='pearson')

print("--------------- CREATE A HEATMAP ---------------")
# Create a mask to display only the lower triangle of the matrix (since it's mirrored around its 
# top-left to bottom-right diagonal).
mask = np.zeros_like(corr_df)
mask[np.triu_indices_from(mask)] = True
# Create the heatmap using seaborn library. 
# List if colormaps (parameter 'cmap') is available here: http://matplotlib.org/examples/color/colormaps_reference.html
seaborn.heatmap(corr_df, cmap='RdYlGn_r', vmax=1.0, vmin=-1.0 , mask = mask, linewidths=2.5)
 
# Show the plot we reorient the labels for each column and row to make them easier to read.
plt.yticks(rotation=0) 
plt.xticks(rotation=90) 
plt.show()




