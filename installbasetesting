# Import pandas module as 'pd'
import pandas as pd
from dateutil.parser import parse
from datetime import datetime
import xlrd
from pandasql import sqldf
from pandas import ExcelWriter

# Create a dataframe
# specify file path for windows users: target_file = r'C:\Users\k6o\aseanoutput.xlsx'
target_file1 = r'installbasetest.xlsx'
xls_file1 = pd.read_excel(target_file1)
# xls_file['Date Sent'] =  pd.to_datetime(xls_file['Date Sent'], format='%m-%d-%Y %I:%M:%S')
# xls_file['Created Date'] =  pd.to_datetime(xls_file['Created Date'], format='%m-%d-%Y %I:%M:%S')
# xls_file['Account Created'] =  pd.to_datetime(xls_file['Account Created'], format='%m-%d-%Y %I:%M:%S')
# xls_file['Contact Created'] =  pd.to_datetime(xls_file['Contact Created'], format='%m-%d-%Y %I:%M:%S')
# xls_file['Last Updated'] =  pd.to_datetime(xls_file['Last Updated'], format='%m-%d-%Y %I:%M:%S')
df1=pd.DataFrame(xls_file1)
df1.head()

# count of SW
swdf = df1[(df1['SW']>=0)]
sw_g = swdf.groupby('Country')['SW'].count()
sw_g = pd.DataFrame(sw_g, columns=['SW'])

# count of Sim
newdf = df1[(df1['Sim']>0)]
g = newdf.groupby('Country')['Sim'].count()
g = pd.DataFrame(g, columns=['Sim'])

# count of PDM
newdfpdm = df1[(df1['EPDM']>0)]
g_pdm = newdfpdm.groupby('Country')['EPDM'].count()
g_pdm = pd.DataFrame(g_pdm, columns=['EPDM'])

# count of Composer
newdfcomposer = df1[(df1['Composer']>0)]
g_composer = newdfcomposer.groupby('Country')['Composer'].count()
g_composer = pd.DataFrame(g_composer, columns=['Composer'])

# concatenate all products into one dataframe
MP = pd.concat([sw_g, g, g_pdm, g_composer], axis=1)

# rename columns
MP.columns = ['Count of SW', 'Count of Sim', 'Count of EPDM', 'Count of Composer']

# find penetration rate for each product
MP['Sim Penetration Rate'] = MP['Count of Sim'] / MP['Count of SW']
MP['EPDM Penetration Rate'] = MP['Count of EPDM'] / MP['Count of SW']
MP['Composer Penetration Rate'] = MP['Count of Composer'] / MP['Count of SW']

#dont use
writer = ExcelWriter('installbaseOutput.xlsx')
T1.to_excel(writer,'Sheet1')
writer.save()

